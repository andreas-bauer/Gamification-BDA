[
  {
    "objectID": "Gamification-BDA.html",
    "href": "Gamification-BDA.html",
    "title": "Gamification BDA",
    "section": "",
    "text": "Software testing is an integral part of software development. Developers incorporate tests from low-level unit tests to high-level system tests and GUI-based tests. GUI-based tests can verify a system’s behavior through interactions with its GUI the same way a user would. One approach to increase the engagement and motivation of people performing a task is Gamification, where elements originated in games are applied in a non-gaming context. In the context of exploratory GUI-based testing, Gamification could improve testers’ engagement and therefore improve the outcome of test activities.\nCoppola et al. [1] conducted an experiment with 144 participants to investigate how Gamification would impact the effectiveness and efficiency of exploratory GUI testing.\nIn this project, I perform a (re-)analysis of the impacts of Gamification for exploratory GUI testing using Bayesian Data Analysis (BDA). Input for this analysis is the replication package from the experiment [1]."
  },
  {
    "objectID": "Gamification-BDA.html#prerequisites",
    "href": "Gamification-BDA.html#prerequisites",
    "title": "Gamification BDA",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nsuppressPackageStartupMessages(library(dagitty))\nsuppressPackageStartupMessages(library(rethinking))\nsuppressPackageStartupMessages(library(magrittr))\nsuppressPackageStartupMessages(library(tidyverse))"
  },
  {
    "objectID": "Gamification-BDA.html#directed-acyclic-graph-dag",
    "href": "Gamification-BDA.html#directed-acyclic-graph-dag",
    "title": "Gamification BDA",
    "section": "Directed Acyclic Graph (DAG)",
    "text": "Directed Acyclic Graph (DAG)\nA DAG helps us to understand the relationships between the different variables visually.\n\nG: Gamification approach was used; value = {true, false}\nEJ: Experience in Java; value = {“<1 year”, “1-3 years”, “>3 years”}\nEW: Experience in web development; value = {“<1 year”, “1-3 years”, “>3 years”}\nET: Experience in software testing; value = {“<1 year”, “1-3 years”, “>3 years”}\nW: Inspected widgets\nB: Identified bugs\nCOV: Test coverage\nEF: Effectiveness of exploratory testing\nAW: Average number of widgets on a page\n\n\ndag <- dagitty(\"dag {\nG -> W\nG -> B\nEJ -> W\nEJ -> B\nEW -> W\nEW -> B\nET -> W\nET -> B\nW -> COV\nB -> COV\nAW -> COV\nCOV -> EF\n}\")\ndrawdag(dag)\n\n\n\n\nAssumptions:\n\nG -> W: Using Gamification encourage testers to inspect more widgets\nG -> B: Using Gamification encourage testers to identify more bugs\nEJ -> W: Experience in the used programming language will improve the inspection rate of widgets\nEJ -> B: Experience in the used programming will identify more bugs\nEW -> W: Experience in the technology of the SUT improves the inspection rate of widgets\nEW -> B: Experience in the technology of the SUT improves the identification of bugs\nET -> W: Experience in software testing improves the inspection rate of widgets\nET -> B: Experience in software testing improves the identification of bugs\nW -> COV: More inspected widgets increase the test coverage\nB -> COV: More identified bugs increase the test coverage\nAW -> COV: Average number of widgets on a page influence the test coverage of exploratory tests\nCOV -> EF: More test coverage improves the effectiveness of exploratory tests\n\n\nBuilding blocks\nA causal DAG is always built using one or more of the four types of relations: Fork, Pipe, Collider, and Descendant.\nFork: In a fork relationship, a variable (G) is the cause of B and W, e.g., B <- G -> W. Here B and W stay independent\nPipe: In a pipe, variables influence the next element in the pipe, e.g., B -> COV -> EF. B influences COV, which influences EF. Conditioning on COV would block the information flow between B and EF.\nCollider: In this DAG, an example of a collider is the EJ -> W <- EW. A relationship between EF and WE only appears if you condition on W; otherwise, there will be no association between EJ and WE.\nDescendent: The DAG consists of multiple descendent relationships, e.g., AW -> COV <- B; COV -> EF. A descendent (EF) is influenced by another variable (COV)."
  },
  {
    "objectID": "Gamification-BDA.html#dag-simpified-version",
    "href": "Gamification-BDA.html#dag-simpified-version",
    "title": "Gamification BDA",
    "section": "DAG simpified version",
    "text": "DAG simpified version\nThe presented DAG would require a multi-level model and a general more complex approach to investigate the impact of Gamification on the effectiveness of tests. For this reason, I simplified the DAG as a starting point for the analysis. In the following DAG, the amount of inspected widgets (W) serves as a proxy to understand the impact of Gamification.\n\ndag <- dagitty(\"dag {\nG -> W\nEJ -> W\nEW -> W\nET -> W\n}\")\ndrawdag(dag)"
  },
  {
    "objectID": "Gamification-BDA.html#estimating-probability-distributions",
    "href": "Gamification-BDA.html#estimating-probability-distributions",
    "title": "Gamification BDA",
    "section": "Estimating probability distributions",
    "text": "Estimating probability distributions\nG ~ beta-binomial(n, p, θ)\nEJ, WE, ET ~ log-normal(µ, σ)\nW   ~ possion(λ) ``"
  },
  {
    "objectID": "Gamification-BDA.html#import-data-from-the-replication-package",
    "href": "Gamification-BDA.html#import-data-from-the-replication-package",
    "title": "Gamification BDA",
    "section": "Import data from the replication package",
    "text": "Import data from the replication package\nLoad raw data from replication package.\n\ndemographicRaw <- read.csv(file = 'data/demographic.csv', header = TRUE, sep = ';', nrows=152)\nwithGameRaw <- read.csv(file = 'data/gamified_sessions.csv', header = TRUE, sep = ';', nrows=152)\nwithoutGameRaw <- read.csv(file = 'data/non_gamified_sessions.csv', header = TRUE, sep = ';', nrows=152)\n\nCleanup demographic data by replacing string representations of the experience levels with ordered categorical numbers (1,2, and 3). The differences between categorical numbers are not equal, e.g., a person with 3 years of experience with testing will not result in 3 times better outcome compared to one with 1 year of experience.\n\ndemographic <- subset(demographicRaw, select = c(Students.ID, expertise.in.java, expertise.in.sw.testing, expertise.in.web.app.development))\n\nnames(demographic) <- c(\"studentId\", \"expJava\", \"expTest\", \"expWeb\")\n\nexpLessThan1Year = 1\nexpBetween1and3Years = 2\nexpMoreThan3Years = 3\n\nexpAsNumeric <- Vectorize(vectorize.args = \"expLevel\", FUN = function(expLevel) {\n  experience = tolower(expLevel)\n  result = switch(\n    experience,\n    \"less than one year\"=expLessThan1Year,\n    \"between one year and three years\"=expBetween1and3Years,\n    \"more than three years\"=expMoreThan3Years,\n    0\n  )\n})\n\n# transform strings to numerical values\ndemographic[2:4] <- lapply(demographic[2:4], expAsNumeric)\n\n# transform numerical values to categorical values\ndemographic[2:4] <- lapply(demographic[2:4], factor)\n\n\nwithGame <- subset(withGameRaw, select = c(Students.ID, X..Interactions.G))\n\nnames(withGame) <- c(\"studentId\", \"widgetsInspected\")\nwithGame['gamification'] <- 1\n\nwithoutGame <- subset(withoutGameRaw, select = c(Students.ID, X..Interactions))\nnames(withoutGame) <- c(\"studentId\", \"widgetsInspected\")\nwithoutGame['gamification'] <- 0\n\ngame_merged <-rbind(withGame, withoutGame)\ngame_merged <- merge(game_merged, demographic, by=\"studentId\")"
  },
  {
    "objectID": "Gamification-BDA.html#estimating-model-parameters",
    "href": "Gamification-BDA.html#estimating-model-parameters",
    "title": "Gamification BDA",
    "section": "Estimating model parameters",
    "text": "Estimating model parameters\nBases on my understanding of the field of GUI-based testing, I estimate average values for the parameters, which makes those weakly informative priors.\nFor alpha, the general expectation to interact with widgets of a system I look for a value ~ 25.\n\nfor (i in 1:5) {\n  am <- mean(rlnorm(1000, i, 1))\n  print(paste(\"meanlog\", i, \":\", round(am)))\n}\n\n[1] \"meanlog 1 : 4\"\n[1] \"meanlog 2 : 13\"\n[1] \"meanlog 3 : 34\"\n[1] \"meanlog 4 : 86\"\n[1] \"meanlog 5 : 239\"\n\nfor (i in c(2.2, 2.4, 2.6, 2.8)) {\n  am <- mean(rlnorm(1000, i, 1))\n  print(paste(\"meanlog\", i, \":\", round(am)))\n}\n\n[1] \"meanlog 2.2 : 16\"\n[1] \"meanlog 2.4 : 19\"\n[1] \"meanlog 2.6 : 21\"\n[1] \"meanlog 2.8 : 28\"\n\n\nlnorm(2.6, 1) seems to be a good candidate for alpha.\n\nN <- 100\ncurve(dlnorm(x,2.6,1), from = 0, to=N, n=N, xlab=\"N\", ylab = \"dlnorm(3, 1)\",  col = \"blue\")\n\n\n\n\nFor the different experience levels (ET, EW, ET), I make the following assumptions:\n\nThe mean value for experience with Java is 2 years with a standard deviation of 1 year.\nThe mean value for experience with web development is 2 years with a standard deviation of 1 year.\nThe mean value for experience with testing is 1.5 years with a standard deviation of 1 year.\nThe impact of Gamification should be less then from experience in Java, web development, or testing.\n\n\nb_EJ <- rlnorm(N, 2, 0.5)\nb_EW <- rlnorm(N, 2, 0.5)\nb_ET <- rlnorm(N, 1.5, 0.5 )\nb_G <- rlnorm(N, 1, 0.5 )\n\nThe Gamification parameter has a binomial distribution and are either 1 or 0.\n\nb_G <- dbinom(N, 1, 0.5)\n\n\nset.seed(2023)\nN <- 100\na <- rlnorm(N, 2.6, 1)\nb_EJ <- rlnorm(N, 2, 0.5)\nb_EW <- rlnorm(N, 2, 0.5)\nb_ET <- rlnorm(N, 1.5, 0.5 )\nb_G <- rlnorm(N, 1, 0.5)\nplot( NULL , xlim=c(0,3) , ylim=c(0,100), ylab = \"Interactions with Widgets\" )\nfor (i in 1:N) {\n  curve(a[i] +  b_EJ[i]*x + b_EW[i]*x + b_ET[i]*x + b_G[i]*x,  col = \"blue\", add = TRUE)\n}\n\n\n\n\nThe predictor values for the first attempt of a model look promising since there are not scattered too much. Reducing the standard deviation results in a more narrow range of values.\n\nset.seed(2023)\nN <- 100\na <- rlnorm(N, 2.6, 0.4)\nb_EJ <- rlnorm(N, 2, 0.4)\nb_EW <- rlnorm(N, 2, 0.4)\nb_ET <- rlnorm(N, 1.5, 0.4 )\nb_G <- rlnorm(N, 1, 0.4)\nplot( NULL , xlim=c(0,3) , ylim=c(0,100), ylab = \"Interactions with widgets\" )\nfor (i in 1:N) {\n  curve(a[i] +  b_EJ[i]*x + b_EW[i]*x + b_ET[i]*x + b_G[i]*x,  col = \"blue\", add = TRUE)\n}"
  },
  {
    "objectID": "Gamification-BDA.html#model",
    "href": "Gamification-BDA.html#model",
    "title": "Gamification BDA",
    "section": "Model",
    "text": "Model\nThe model that shall describe how Gamification impacts the interactions with widgets is m3. Additionally, models m1 and m2 were created to see the impact of α.\nW   ~ possion(λ)\nModel 1: log(λ) <- α\nModel 2: log(λ) <- α + βg*gamification\nModel 3: log(λ) <- α + βej*EJ + βew*EW + βet*ET + βg*gamification\n\nm1 <- ulam(\n  alist(widgetsInspected ~ dpois(lam),\n    log(lam) <- alpha,    \n    alpha ~ dlnorm(2.6, 0.4)\n    ), data=game_merged, \n  chains=4, # number of independent chain to sample from\n  log_lik = TRUE # if TRUE ULAM computes values for PSIS and WAIC\n)\n\n\nprecis(m1, depth=2)\n\n          mean          sd     5.5%    94.5%    n_eff    Rhat4\nalpha 4.854779 0.005176709 4.846716 4.863131 680.6048 1.004452\n\n\n\nm2<- ulam(\n  alist(widgetsInspected ~ dpois(lam),\n    log(lam) <- alpha + b_G*gamification,    \n    alpha ~ dlnorm(2.6, 0.4),\n    b_G ~ dlnorm(1, 0.4)\n    ), data=game_merged, chains=4, log_lik = TRUE\n)\n\n\nprecis(m2, depth=2)\n\n           mean          sd     5.5%     94.5%    n_eff    Rhat4\nalpha 4.7900877 0.007377442 4.778279 4.8016833 470.6433 1.009661\nb_G   0.1252739 0.009944860 0.109400 0.1416303 363.0923 1.014149\n\n\n\nm3 <- ulam(\n  alist(widgetsInspected ~ dpois(lam),\n    log(lam) <- alpha + b_EJ*expJava + b_EW*expWeb + b_ET*expTest + b_G*gamification,    \n    alpha ~ dlnorm(2.6, 0.4),    \n    b_EJ ~ dlnorm(2, 0.4),\n    b_EW ~ dlnorm(2, 0.4),\n    b_ET ~ dlnorm(1.5, 0.4),\n    b_G ~ dlnorm(1, 0.4)\n    ), data=game_merged, chains=4, log_lik = TRUE\n)\n\n\nprecis(m3, depth=2)\n\n            mean          sd       5.5%      94.5%    n_eff    Rhat4\nalpha 4.37818531 0.020309787 4.34601305 4.41146275 1223.945 1.002397\nb_EJ  0.18980600 0.009767010 0.17423123 0.20527054 1423.254 1.001523\nb_EW  0.01793723 0.002532670 0.01407999 0.02215322 1819.917 1.001086\nb_ET  0.03652644 0.005329249 0.02848475 0.04539120 1782.183 0.998887\nb_G   0.12628794 0.009808516 0.11077101 0.14143065 1561.875 1.000076\n\n\nn_eff is an estimation of the number of independent samples [2].\nRhat is an indicator of the convergence of the Markov chains to the target distribution and should approach 1.0 [2].\nBoth n_eff and Rhat4 values are in an expected value range.\nAll three types of experience and Gamification have a positive association with the amount of inspected widgets. Experience with Java b_EJ has the highest association, followed by Gamification b_G. Whereas the experience with web development b_EW and testing b_ET have a very low association to the amount of inspected widgets.\nWhen comparing the three models m3 has all of the weights (~1), which indicates a strong support for the experience factors.\n\ncompare(m1, m2, m3, func = PSIS)\n\n       PSIS       SE    dPSIS      dSE     pPSIS       weight\nm3 20179.36 2278.396   0.0000       NA 234.05348 1.000000e+00\nm2 20328.44 2365.881 149.0837 358.2261 145.37713 4.235266e-33\nm1 20372.72 2361.241 193.3668 420.7575  80.09241 1.025507e-42"
  },
  {
    "objectID": "Gamification-BDA.html#references",
    "href": "Gamification-BDA.html#references",
    "title": "Gamification BDA",
    "section": "References",
    "text": "References\n[1] Coppola, R., Fulcini, T., Ardito, L., Torchiano, M. & Alégroth, E., Gamification: the next Silver Bullet for Exploratory GUI Testing? (in revision)\n[2] McElreath, R. (2020). Statistical rethinking: A Bayesian course with examples in R and Stan."
  }
]