[
  {
    "objectID": "Gamification-BDA.html",
    "href": "Gamification-BDA.html",
    "title": "Gamification BDA",
    "section": "",
    "text": "Software testing is an integral part of software development. Developers incorporate tests from low-level unit tests to high-level system tests and GUI-based tests. GUI-based tests can verify a system’s behavior through interactions with its GUI the same way a user would. One approach to increase the engagement and motivation of people performing a task is Gamification, where elements originated in games are applied in a non-gaming context. In the context of exploratory GUI-based testing, Gamification could improve testers’ engagement and therefore improve the outcome of test activities.\nCoppola et al. [1] conducted an experiment with 144 participants to investigate how Gamification would impact the effectiveness and efficiency of exploratory GUI testing.\nIn this project, I perform a (re-)analysis of the impacts of Gamification for exploratory GUI testing using Bayesian Data Analysis (BDA). Input for this analysis is the replication package from the experiment [1]."
  },
  {
    "objectID": "Gamification-BDA.html#directed-acyclic-graph-dag",
    "href": "Gamification-BDA.html#directed-acyclic-graph-dag",
    "title": "Gamification BDA",
    "section": "Directed Acyclic Graph (DAG)",
    "text": "Directed Acyclic Graph (DAG)\nA DAG helps us to understand the relationships between the different variables visually.\n\nG: Gamification approach was used; value = {true, false}\nEJ: Experience in Java; value = {“<1 year”, “1-3 years”, “>3 years”}\nEW: Experience in web development; value = {“<1 year”, “1-3 years”, “>3 years”}\nET: Experience in software testing; value = {“<1 year”, “1-3 years”, “>3 years”}\nW: Inspected widgets\nB: Identified bugs\nCOV: Test coverage\nEF: Effectiveness of exploratory testing\nAW: Average number of widgets on a page\n\n\nsuppressPackageStartupMessages(library(dagitty))\nsuppressPackageStartupMessages(library(rethinking))\ndag <- dagitty(\"dag {\nG -> W\nG -> B\nEJ -> W\nEJ -> B\nEW -> W\nEW -> B\nET -> W\nET -> B\nW -> COV\nB -> COV\nAW -> COV\nCOV -> EF\n}\")\ndrawdag(dag)\n\n\n\n\nAssumptions:\n\nG -> W: Using Gamification encourage testers to inspect more widgets\nG -> B: Using Gamification encourage testers to identify more bugs\nEJ -> W: Experience in the used programming language will improve the inspection rate of widgets\nEJ -> B: Experience in the used programming will identify more bugs\nEW -> W: Experience in the technology of the SUT improves the inspection rate of widgets\nEW -> B: Experience in the technology of the SUT improves the identification of bugs\nET -> W: Experience in software testing improves the inspection rate of widgets\nET -> B: Experience in software testing improves the identification of bugs\nW -> COV: More inspected widgets increase the test coverage\nB -> COV: More identified bugs increase the test coverage\nAW -> COV: Average number of widgets on a page influence the test coverage of exploratory tests\nCOV -> EF: More test coverage improves the effectiveness of exploratory tests\n\n\nBuilding blocks\nA causal DAG is always built using one or more of the four types of relations: Fork, Pipe, Collider, and Descendant.\nFork: In a fork relationship, a variable (G) is the cause of B and W, e.g., B <- G -> W. Here B and W stay independent\nPipe: In a pipe, variables influence the next element in the pipe, e.g., B -> COV -> EF. B influences COV, which influences EF. Conditioning on COV would block the information flow between B and EF.\nCollider: In this DAG, an example of a collider is the EJ -> W <- EW. A relationship between EF and WE only appears if you condition on W; otherwise, there will be no association between EJ and WE.\nDescendent: The DAG consists of multiple descendent relationships, e.g., AW -> COV <- B; COV -> EF. A descendent (EF) is influenced by another variable (COV)."
  },
  {
    "objectID": "Gamification-BDA.html#import-data-from-the-replication-package",
    "href": "Gamification-BDA.html#import-data-from-the-replication-package",
    "title": "Gamification BDA",
    "section": "Import data from the replication package",
    "text": "Import data from the replication package\nLoad raw data from replication package.\n\ndemographicRaw <- read.csv(file = 'data/demographic.csv', header = TRUE, sep = ';')\nwithGameRaw <- read.csv(file = 'data/gamified_sessions.csv', header = TRUE, sep = ';')\nwithoutGameRaw <- read.csv(file = 'data/non_gamified_sessions.csv', header = TRUE, sep = ';')\n\nCleanup demographic data by replacing string representations of the experience levels with categorical numbers (1,2, and 3). Further, incomplete rows are removed\n\ndemographic <- subset(demographicRaw, select = c(Group, Students.ID, expertise.in.java, expertise.in.sw.testing, expertise.in.web.app.development))\n\n# remove incomplete rows\ndemographic <- demographic[complete.cases(demographic),]\n\ncolnames(demographic)[1] = \"group\"\ncolnames(demographic)[2] = \"studentId\"\ncolnames(demographic)[3] = \"expJava\"\ncolnames(demographic)[4] = \"expTesting\"\ncolnames(demographic)[5] = \"expWeb\"\n\nexpLessThan1Year = 1\nexpBetween1and3Years = 2\nexpMoreThan3Years = 3 \n\nexpAsNumeric <- Vectorize(vectorize.args = \"expLevel\", FUN = function(expLevel) {\n  experience = tolower(expLevel)\n  result = switch(\n    experience,\n    \"less than one year\"=expLessThan1Year,\n    \"between one year and three years\"=expBetween1and3Years,\n    \"more than three years\"=expMoreThan3Years,\n    0\n  )\n})\n\n# transform strings to numerical values\ndemographic[3:5] <- lapply(demographic[3:5], expAsNumeric)\n\n# transform numerical values to categorical values\ndemographic[3:5] <- lapply(demographic[3:5], factor)"
  },
  {
    "objectID": "Gamification-BDA.html#references",
    "href": "Gamification-BDA.html#references",
    "title": "Gamification BDA",
    "section": "References",
    "text": "References\n[1] Coppola, R., Fulcini, T., Ardito, L., Torchiano, M. & Alégroth, E., Gamification: the next Silver Bullet for Exploratory GUI Testing? (in revision)\n[2] McElreath, R. (2020). Statistical rethinking: A Bayesian course with examples in R and Stan."
  }
]